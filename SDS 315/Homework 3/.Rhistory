theme_minimal()
# Summary statistics
word_count_summary <- summary(books$Word_Count)
word_count_summary
books <- books %>%
mutate(Word_Count = str_count(Title, "\\S+"))
ggplot(books, aes(x = Word_Count)) +
geom_histogram(binwidth = 1, color = "black") +
labs(title = "Distribution of Number of Words in Book Titles", x = "Number of Words", y = "Frequency")
summary(books$Word_Count)
lastName <- ifelse(
is.na(word(author, 2)),
word(author, -1),
word(author, 2)
)
books <- tibble(Title = title, Author = author, averageRating = averageRating, LastName = lastName)
shortest_last_name <- books %>%
filter(nchar(lastName) == min(nchar(lastName))) %>%
select(Title, Author)
shortest_last_name
books <- books %>%
mutate(Word_Count = str_count(Title, "\\S+"))
ggplot(books, aes(x = Word_Count)) +
geom_histogram(binwidth = 1, color = "black") +
labs(title = "Distribution of Number of Words in Book Titles", x = "Number of Words", y = "Frequency")
summary(books$Word_Count)
#Randomly sample from a vector:
x <- c(4,6,9,10,15,20)
sample(x,1)
#Sample with replacement:
sample(x,5,replace=TRUE)
?runif
#Pull 10 random numbers from a Uniform(0,100) distribution:
runif(10,0,100)
#Pull 10 random numbers from a Uniform(0,100) distribution:
runif(10,0,100)
#Pull 10 random numbers from a Uniform(0,100) distribution:
runif(10,0,100)
#Pull 10 random numbers from a Normal(0,1) distribution:
rnorm(10,0,1)
#Pull 10 random numbers from a Normal(0,1) distribution:
rnorm(10,0,1)
#Pull 10 random numbers from a Normal(0,1) distribution:
rnorm(10,0,1)
#Pull 10 random numbers from a Normal(0,1) distribution:
rnorm(10,0,1)
#Pull 10 random numbers from a Normal(0,1) distribution:
rnorm(10,0,1)
#For reproducable results:
set.seed(56)
rnorm(10,0,1)
#For reproducable results:
set.seed(56)
rnorm(10,0,1)
#For reproducable results:
set.seed(56)
rnorm(10,0,1)
?rnorm
#Group Practice A:
rnorm(100,100,15)
#Group Practice A:
rnorm(100,100,15)
#Group Practice A:
rnorm(100,100,15)
#Group Practice A:
rnorm(100,100,15)
#Create empty vector to store outcomes:
myrolls <- numeric(0)
#"Roll" a 6-sided die 5,000 times:
for (i in 1:5000) {
x <- sample(1:6,1)
myrolls[i] <- x
}
#Plot results:
library(ggplot2)
mydata <- data.frame(myrolls)
ggplot(mydata) + geom_histogram(aes(x=myrolls))
View(mydata)
#Create empty vector to store outcomes:
myrolls <- numeric(0)
#"Roll" a 6-sided die 5,000 times:
for (i in 1:5000) {
x <- sample(1:6,1)
myrolls[i] <- x
}
#Plot results:
library(ggplot2)
mydata <- data.frame(myrolls)
ggplot(mydata) + geom_histogram(aes(x=myrolls))
#Create empty vector to store outcomes:
myrolls <- numeric(0)
#"Roll" a 6-sided die 5,000 times:
for (i in 1:5000) {
x <- sample(1:6,1)
myrolls[i] <- x
}
#Plot results:
library(ggplot2)
mydata <- data.frame(myrolls)
ggplot(mydata) + geom_histogram(aes(x=myrolls))
#Create empty vectors to store outcomes:
myrolls <- numeric(0)
my4prob <- numeric(0)
#Store relative frequency of rolling a 4:
for (i in 1:5000) {
x <- sample(1:6,1)
myrolls[i] <- x
my4prob[i] <- sum(myrolls==4)/i
}
#Plot results:
plot(1:5000, my4prob, type='l')
abline(h=1/6, lty=2, col='red')
#Create empty vectors to store outcomes:
myrolls <- numeric(0)
my4prob <- numeric(0)
#Store relative frequency of rolling a 4:
for (i in 1:5000) {
x <- sample(1:6,1)
myrolls[i] <- x
my4prob[i] <- sum(myrolls==4)/i
}
#Plot results:
plot(1:5000, my4prob, type='l')
abline(h=1/6, lty=2, col='red')
#Create empty vectors to store outcomes:
myrolls <- numeric(0)
my4prob <- numeric(0)
#Store relative frequency of rolling a 4:
for (i in 1:5000) {
x <- sample(1:6,1)
myrolls[i] <- x
my4prob[i] <- sum(myrolls==4)/i
}
#Plot results:
plot(1:5000, my4prob, type='l')
abline(h=1/6, lty=2, col='red')
#Group Practice C
#Create empty vectors to store outcomes:
myrolls <- numeric(0)
my4prob <- numeric(0)
#Store relative frequency of rolling a 4:
for (i in 1:5000) {
x <- sample(1:6,1)+sample(1:6,1)
myrolls[i] <- x
my4prob[i] <- sum(myrolls==4)/i
}
#Plot results:
plot(1:5000, my4prob, type='l')
abline(h=1/6, lty=2, col='red')
#Define door options:
doors <- c(1,2,3)
#Create empty vectors to store outcomes:
always.stay <- c()
always.switch <- c()
#Simulate probabilities of "staying" and "switching":
for (i in 1:1000){
door.car <- sample(doors, 1)
door.choose <- sample(doors, 1)
always.stay[i] <- (door.choose == door.car)
remaining.doors <- setdiff(doors, union(door.car, door.choose))
if (length(remaining.doors) == 1){
shown.door <- remaining.doors
}
else shown.door <- sample(remaining.doors, 1)
door.switch <- setdiff(doors, union(door.choose, shown.door))
always.switch[i] <- (door.switch == door.car)
}
?setdiff
library(tidyverse)
library(ggplot2)
library(rvest)
library(stringr)
web_scaped <- read_html("https://jobs.apple.com/app/en-us/profile/roles")
web_scaped <- read_html("/Users/kaustubhduddala/Downloads/odwnlawmd2FE")
title <- html_text(html_elements(web_scaped, ".profile-jobs-item__info h3"))
View(web_scaped)
library(tidyverse)
library(ggplot2)
library(rvest)
library(stringr)
web_scaped <- read_html("https://www.goodreads.com/list/show/1360.Best_Banned_Censored_and_Challenged_Books")
title <- html_text(html_elements(web_scaped, ".bookTitle span"))
author <- html_text(html_elements(web_scaped, ".authorName span")) %>%
str_squish()
averageRating <- html_text(html_elements(web_scaped, ".minirating")) %>%
str_extract("[0-9]\\.[0-9]+") %>%
as.numeric()
books <- tibble(Title = title, Author = author, AverageRating = averageRating)
print(books, n = 10)
View(web_scaped)
View(web_scaped)
library(tidyverse)
library(ggplot2)
library(rvest)
library(stringr)
web_scaped <- read_html("/Users/kaustubhduddala/Downloads/odwnlawmd2FE")
title <- html_text(html_elements(web_scaped, ".profile-jobs-item__info h3"))
web_scaped <- read_html("/Users/kaustubhduddala/Downloads/odwnlawmd2FE/Careers at Apple.html")
title <- html_text(html_elements(web_scaped, ".profile-jobs-item__info h3"))
web_scaped <- read_html("https://www.goodreads.com/list/show/1360.Best_Banned_Censored_and_Challenged_Books")
title <- html_text(html_elements(web_scaped, ".bookTitle span"))
author <- html_text(html_elements(web_scaped, ".authorName span")) %>%
str_squish()
averageRating <- html_text(html_elements(web_scaped, ".minirating")) %>%
str_extract("[0-9]\\.[0-9]+") %>%
as.numeric()
books <- tibble(Title = title, Author = author, AverageRating = averageRating)
print(books, n = 10)
web_scaped <- read_html("/Users/kaustubhduddala/Downloads/odwnlawmd2FE/Careers at Apple.html")
title <- html_text(html_elements(web_scaped, ".profile-jobs-item__info h3"))
location <- html_text(html_elements(web_scaped, ".profile-jobs-item__city div"))
table <- tibble(Title = title, Loco = location)
View(table)
View(table)
web_scaped <- read_html("/Users/kaustubhduddala/Downloads/odwnlawmd2FE/Careers at Apple2.html")
title <- html_text(html_elements(web_scaped, ".profile-jobs-item__info h3"))
location <- html_text(html_elements(web_scaped, ".profile-jobs-item__city div"))
table <- tibble(Title = title, Loco = location)
web_scaped <- read_html("/Users/kaustubhduddala/Downloads/odwnlawmd2FE/Careers at Apple3.html")
title <- html_text(html_elements(web_scaped, ".profile-jobs-item__info h3"))
location <- html_text(html_elements(web_scaped, ".profile-jobs-item__city div"))
table <- tibble(Title = title, Loco = location)
setwd("~/Documents/UT/SDS/SDS 315/Homework 3")
p1_data <- read.csv("gasprices.csv")
p1_data <- read.csv("gasprices.csv")
View(p1_data)
View(p1_data)
p1_data <- read.csv("gasprices.csv")
mean(Prices ~ Competitor, data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(Prices ~ Competitors, data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(Price ~ Competitors, data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(Price ~ Competitors, data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(Price ~ Competitors, data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(Price, data=p1_data)
?mean
p1_data <- read.csv("gasprices.csv")
mean(Price ~ Competitors, data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(Price, data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(Price,data=p1_data)
p1_data <- read.csv("gasprices.csv")
mean(p1_data.price,data=p1_data)
p1_data <- as.tibble(read.csv("gasprices.csv"))
p1_data <- as.tibble(read.csv("gasprices.csv"))
p1_data <- read.csv("gasprices.csv")
library(dplyr)
p1_data %>% group_by(Competitors) %>% summarize(mean_price = mean(Price))
p1_data <- read.csv("gasprices.csv")
library(dplyr)
p1_data %>% group_by(Competitors) %>% summarize(mean_price = mean(Price))
p1_data <- read.csv("gasprices.csv")
library(dplyr)
p1_data %>% group_by(Competitors) %>% summarize(mean_price = mean(Price))
p1_data <- read.csv("gasprices.csv")
library(dplyr)
p1_data %>% group_by(Competitors) %>% summarize(mean_price = mean(Price))
p1_data
p1_data <- read.csv("gasprices.csv")
library(dplyr)
p1_data %>% group_by(Competitors) %>% summarize(mean_price = mean(Price))
p1_data <- read.csv("gasprices.csv")
library(dplyr)
p1_data %>% group_by(Competitors) %>% summarize(mean_price = mean(Price))
p1_data
p1_data.price
p1_data.Price
p1_data$Price
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Prics ~ p1_data$Competitors)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Prics ~ p1_data$Competitors)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Prics ~ p1_data$Competitors)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Prics ~ p1_data$
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Prics)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Prics)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Price ~ p1_data$Competitors)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Price ~ p1_data$Competitors)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Price ~ p1_data$Competitors)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Price ~ p1_data$Competitors)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Price)
p1_data <- read.csv("gasprices.csv")
mean(p1_data$Price ~ p1_data$Competitors)
p1_data <- read.csv("gasprices.csv")
mean(Price ~ Competitors, data = p1_data)
p1_data <- read.csv("gasprices.csv")
mean(Price ~ Competitors, data = p1_data)
p1_data <- read.csv("gasprices.csv")
aggregate(Price ~ Competitors, data = p1_data)
p1_data <- read.csv("gasprices.csv")
summary_data <- p1_data %>%
group_by(Competitors) %>%
summarize(mean_price = mean(Price, na.rm = TRUE))
# Print the results
print(summary_data)
p1_data <- read.csv("gasprices.csv")
summary_data <- p1_data %>%
group_by(Competitors) %>%
summarize(mean_price = mean(Price, na.rm = TRUE))
# Print the results
print(summary_data)
library(dplyr)
p1_data <- read.csv("gasprices.csv")
summary_data <- p1_data %>%
group_by(Competitors) %>%
summarize(mean_price = mean(Price, na.rm = TRUE))
# Print the results
print(summary_data)
p1_data <- read.csv("gasprices.csv")
df2 = df.replace(['N','F'],['Y', 'T'])
p1_data <- read.csv("gasprices.csv")
p1_data = p1_data.replace(['N','F'],['Y', 'T'])
?replace
p1d <- read.csv("gasprices.csv") %>%
mutate(A = as.character(A)) %>%
mutate(A = replace(A, A == 'N', 'F')) %>%
mutate(A = as.character(A)) %>%
mutate(A = replace(A, A == 'Y', 'T'))
p1_data <- read.csv("gasprices.csv")
diffmean(Price ~ Competitors, data=p1_data)
library(tidyverse)
install.packages("mosaic")
library(ggplot2)
library(tidyverse)
library(mosaic)
library(ggplot2)
library(tidyverse)
library(mosaic)
p1_data <- read.csv("gasprices.csv")
diffmean(Price ~ Competitors, data=p1_data)
p1d <- read.csv("gasprices.csv")
boot_p1d = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
p1d <- read.csv("gasprices.csv")
boot_p1d = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d, level = 0.95)
p1d <- read.csv("gasprices.csv")
boot_p1d = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d, level = 0.95)
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d, level = 0.95)
# B
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d, level = 0.95)
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
# B
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d_stop, level = 0.95)
mean(Price ~ Stoplight, data=p1d)
pilot_a %>% group_by(Stoplight) %>% summarise(mean_price = mean(Q1_Happy, na.rm = TRUE))
group_by(Stoplight) %>% summarise(mean_price = mean(Q1_Happy, na.rm = TRUE))
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
# B
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d_stop, level = 0.95)
pilot_a %>% group_by(Stoplight) %>% summarise(mean_price = mean(Q1_Happy, na.rm = TRUE))
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
gasprices <- boot_p1d_comp %>%
group_by(Competitors) %>%
summarise(mean_price = mean(Price, na.rm = TRUE))
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
gasprices <- p1d %>%
group_by(Competitors) %>%
summarise(mean_price = mean(Price, na.rm = TRUE))
# B
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d_stop, level = 0.95)
View(summary_data)
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
gasprices <- p1d %>%
group_by(Competitors) %>%
summarise(mean_price = mean(Price, na.rm = TRUE))
mean(Price ~ Competitors, data=p1d)
# B
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d_stop, level = 0.95)
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
View(p1d)
View(p1d)
View(p1d)
confint(boot_p1d_comp, level = 0.95)
mean(Price ~ Competitors, data=p1d)
# B
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d_stop, level = 0.95)
mean(Price ~ Stoplight, data=p1d)
# D
# E
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
mean(Price ~ Competitors, data=p1d)
# B
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d_stop, level = 0.95)
mean(Price ~ Stoplight, data=p1d)
# D
boot_p1d_high = do(10000)*diffmean(Price ~ Highway, data=resample(p1d))
confint(boot_p1d_high, level = 0.95)
mean(Price ~ Highway, data=p1d)
# E
group_by(Stoplight) %>% summarise(mean_price = mean(Q1_Happy, na.rm = TRUE))
mean(Price ~ Brand="Shell", data=p1d)
mean(Price ~ Brand=="Shell", data=p1d)
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
mean(Price ~ Competitors, data=p1d)
# B
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d_stop, level = 0.95)
mean(Price ~ Stoplight, data=p1d)
# D
boot_p1d_high = do(10000)*diffmean(Price ~ Highway, data=resample(p1d))
confint(boot_p1d_high, level = 0.95)
mean(Price ~ Highway, data=p1d)
# E
boot_p1d_high = do(10000)*diffmean(Price ~ Brand=="Shell", data=resample(p1d))
confint(boot_p1d_high, level = 0.95)
mean(Price ~ Brand=="Shell", data=p1d)
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
mean(Price ~ Competitors, data=p1d)
# B
boot_p1d_income = do(10000)*cor(Price ~ Income, data=resample(p1d))
confint(boot_p1d_income, level = 0.95)
mean(Price ~ Income, data=p1d)
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d_stop, level = 0.95)
mean(Price ~ Stoplight, data=p1d)
# D
boot_p1d_high = do(10000)*diffmean(Price ~ Highway, data=resample(p1d))
confint(boot_p1d_high, level = 0.95)
mean(Price ~ Highway, data=p1d)
# E
boot_p1d_brand = do(10000)*diffmean(Price ~ Brand=="Shell", data=resample(p1d))
confint(boot_p1d_brand, level = 0.95)
mean(Price ~ Brand=="Shell", data=p1d)
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
mean(Price ~ Competitors, data=p1d)
# B
boot_p1d_income = do(10000)*cor(Price ~ Income, data=resample(p1d))
confint(boot_p1d_income, level = 0.95)
mean(Price ~ Income, data=p1d)
# C
boot_p1d_stop = do(10000)*diffmean(Price ~ Stoplight, data=resample(p1d))
confint(boot_p1d_stop, level = 0.95)
mean(Price ~ Stoplight, data=p1d)
# D
boot_p1d_high = do(10000)*diffmean(Price ~ Highway, data=resample(p1d))
confint(boot_p1d_high, level = 0.95)
mean(Price ~ Highway, data=p1d)
# E
boot_p1d_brand = do(10000)*diffmean(Price ~ Brand=="Shell", data=resample(p1d))
confint(boot_p1d_brand, level = 0.95)
mean(Price ~ Brand=="Shell", data=p1d)
p1d <- read.csv("gasprices.csv")
# A
boot_p1d_comp = do(10000)*diffmean(Price ~ Competitors, data=resample(p1d))
confint(boot_p1d_comp, level = 0.95)
